#install.packages("lme4") / library(lme4) /  / #--------------------------------------------------------------------------------------- / # data loading and transofrmation / data <- read.csv("1. Crowdstorming Dataset 05.10.14.csv", as.is = T, encoding = "UTF-8") /  / # making a list of players with their data / players <- list() / playerNames <- vector(length = 2060) / count <- 1 / for(i in 1:nrow(data)) { /   player <- data$playerShort[i]  /   if(player %in% playerNames) { /     players[[player]] <- rbind(players[[player]], data[i,]) /   } else { /     players[[player]] <- data.frame(data[i,, drop = F]) /     playerNames[count] <- player /     count <- count + 1 /   } / } /  / # exclude referees from countries with too little people in IAT/Exp / attitudes <- aggregate(data[,21:27], list(data$refCountry), function(x) mean(x, na.rm=T)) /  / sdI <- sd(attitudes$meanIAT, na.rm = T) / sdE <- sd(attitudes$meanExp, na.rm = T) / excludeExplicit <- attitudes$refCountry[attitudes$seIAT > sdI/5 | is.na(attitudes$seIAT)] / excludeImplicit <- attitudes$refCountry[attitudes$seExp > sdE/5 | is.na(attitudes$seExp)] /  /  / # transformation in long format / data <- cbind(data, rating = (data$rater1 + data$rater2) / 2) /  / d <- matrix("", ncol = 13, nrow = sum(data$games)) / count <- 1 / for(i in 1:nrow(data)) { /   row <- data[i, c(1, 3:9, 20:22, 25, 28)] /   games <- data$games[i] /   reds <- data$yellowReds[i] + data$redCards[i] /   for(game in 1:games) { /     if(reds > 0) { /       row[8] <- 1 /       reds <- reds - 1 /     } else { /       row[8] <- 0 /     } /     d[count, ] <- as.character(row) /     count <- count + 1 /   } / } /  / colnames(d) <-  colnames(data)[c(1, 3:9, 20:22, 25, 28)] / colnames(d)[8] <- "red" / d <- data.frame(d, stringsAsFactors = F) /  / # average goals variable / goals <- list() / for(i in 1:length(players)) { /   goals[[players[[i]][[1]][1]]] <- sum(players[[i]]$goals) / sum(players[[i]]$games) / } / temp.goals <- vector(length = nrow(d), mode = "numeric") / for(i in 1:nrow(d)) { /   temp.goals[i] <- goals[[d[i, 1]]] / } / d <- cbind(d, goals = temp.goals) /  / # recoding positions in a new variable where sides are not distinguished / position.short <- as.character(d$position) / position.short <- gsub("Left Winger", "Winger", position.short) / position.short <- gsub("Right Winger", "Winger", position.short) / position.short <- gsub("Left Fullback", "Fullback", position.short) / position.short <- gsub("Right Fullback", "Fullback", position.short) / position.short <- gsub("Left Midfielder", "Midfielder", position.short) / position.short <- gsub("Right Midfielder", "Midfielder", position.short) / d <- cbind(d, position.short) /  / # changing types of variables / for(i in c(1:3, 7, 9:10)) { /   d[,i] <- factor(d[,i]) / } / for(i in c(5:6, 8, 11:13)) { /   d[,i] <- as.numeric(d[,i]) / } / d$birthday <- as.Date(d$birthday, format = "%d.%m.%Y") / d <- cbind(d, age = scale(julian(Sys.Date()) - julian(d$birthday))) /  / # standardiyations in new data frame / p <- d / for(i in c(5:6, 14)) { /   p[,i] <- scale(p[,i]) / } / p$meanIAT <- (p$meanIAT - mean(attitudes$meanIAT[!attitudes$refCountry %in% excludeImplicit])) /  /   sd(attitudes$meanIAT[!attitudes$refCountry %in% excludeImplicit]) / p$meanExp <- (p$meanExp - mean(attitudes$meanExp[!attitudes$refCountry %in% excludeExplicit])) /  /   sd(attitudes$meanExp[!attitudes$refCountry %in% excludeExplicit]) / p$rating <- (p$rating - mean(sapply(players, function(x) (x$rater1[1] + x$rater2[1]) / 2), na.rm = T)) / /   sd(sapply(players, function(x) (x$rater1[1] + x$rater2[1]) / 2), na.rm = T) /  / #--------------------------------------------------------------------------------------- / # modelling /  / # dropping variables from the full model / m1 <- lmer(red ~ (1|refNum) + (1|playerShort) + weight + height + rating + age + position.short + goals - 1, /            data = p[apply(p, 1, function(x) all(!is.na(x))),]) / m1a <- drop1(m1) / m2 <- lmer(red ~ (1|refNum) + (1|playerShort) + weight + height + rating + age + position.short - 1, /            data = p[apply(p, 1, function(x) all(!is.na(x))),]) / m2a <- drop1(m2) / m3 <- lmer(red ~ (1|refNum) + (1|playerShort) + weight + height + rating + position.short - 1, /            data = p[apply(p, 1, function(x) all(!is.na(x))),]) / m3a <- drop1(m3) /  / # results # / ########### / # question 1 / m4 <- lmer(red ~ (1|refNum) + (1|playerShort) + weight + height + rating + position.short - 1, /             data = p) / fixef(m4)[3]*100 / confint.merMod(m4, 3, method = "Wald")*100 /  / # question 2a / m5 <- lmer(red ~ (1|refNum) + (1|playerShort) + weight + height + rating + position.short + meanIAT:rating + meanIAT - 1, /             data = p[!p$refCountry %in% excludeImplicit,]) / fixef(m5)[14]*100 / confint.merMod(m5, 14, method = "Wald")*100 /  / # question 2b / m6 <- lmer(red ~ (1|refNum) + (1|playerShort) + weight + height + rating + position.short + meanExp:rating + meanExp - 1, /             data = p[!p$refCountry %in% excludeExplicit,]) / fixef(m6)[14]*100 / confint.merMod(m6, 14, method = "Wald")*100
